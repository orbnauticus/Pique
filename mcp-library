#/usr/bin/env python

import sqlite3

DEFAULT_PATH=os.path.expanduser('~/.mcp-library')

import mcp.gstreamer.gstreamer

def get_tags(uri, normalize=False):
	pipeline = Pipeline(Element('playbin'))
	pipeline['video-sink'] = Element('fakesink')
	if normalize:
		pipeline['audio-sink'] = Bin('rganalysis','fakesink')
	else:
		pipeline['audio-sink'] = Element('fakesink')
	if ':' not in uri:
		uri = 'file://' + os.path.abspath(uri)
	pipeline['uri'] = uri
	print pipeline['async-handling']
	tags = {}
	try:
		pipeline.set_state('playing', wait=False)
		for msg in pipeline.messages():
			if not normalize and isinstance(msg, MessageAsyncDone):
				break
			elif isinstance(msg, MessageTag):
				tags.update(msg)
			elif isinstance(msg, MessageError):
				raise msg.error
		tags['duration'] = pipeline.duration
	finally:
		pipeline._clear_message_queue()
		pipeline.set_state('null')
	return tags



if __name__=='__main__':
	import sys

	db = sqlite3.connect(DEFAULT_PATH)
	c = db.cursor()

	if sys.argv[1] == 'init':
		c.execute('''create table media
			(name text, location text, artist text, album text, level real)
		''')
	elif sys.argv[1] == 'add':
		
	else:
		print 'Error: No command specified'
		exit(1)

	c.commit()
	c.close()
